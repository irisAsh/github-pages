(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{238:function(e){e.exports=JSON.parse('{"tutorial":{"category":"入門","categoryLabel":"Rails","categoryPath":"/rails/","iconClass":"fas fa-home","menus":{"setup":{"linkPath":"/rails/setup/","ogpImage":"/images/rails/setup/ogp.png","title":"環境設定","subTitle":"Gem / Bundle","menuIcon":"fas fa-home","headerTitle":"Ruby on Rails 5 の環境設定","headerDescription":"Ruby on Rails 5 の環境設定について説明します。ここでは、Rails new は使わずプロジェクト内でGemを管理してプロジェクトを作成します。また今後の記事では入門としてToDoアプリを作成しながら解説を進めていきます。"},"use_mariadb":{"linkPath":"/rails/use_mariadb/","ogpImage":"/images/rails/use_mariadb/ogp.png","title":"MariaDBを利用する","subTitle":"MariaDB","menuIcon":"fas fa-coins","headerTitle":"Ruby on RailsでMariaDBを利用する","headerDescription":"Railsプロジェクト作成直後にMariaDBを導入する手順を説明します。Rails初期設定ではSQLite3を利用するようになっていますが、プロジェクト規模が多くなる場合は関係性のあるデータベースを利用する方が良いです。"},"scaffold":{"linkPath":"/rails/scaffold/","ogpImage":"/images/rails/scaffold/ogp.png","title":"scaffoldを使う","subTitle":"rails generate scaffold","menuIcon":"fas fa-folder","headerTitle":"rails generate scaffoldを使ってページを追加する","headerDescription":"rails generate scaffoldを使って新規ページを追加してみます。scaffoldを使用するとコントローラー、ビュー、モデル等の必要とするファイルが全て自動生成されます。config/application.rbを編集して任意の単位で自動生成の拒否設定をすることもできます。"},"use_hamlit":{"linkPath":"/rails/use_hamlit/","ogpImage":"/images/rails/use_hamlit/ogp.png","title":"Hamlitを使う","subTitle":"hamlit-rails","menuIcon":"fas fa-crown","headerTitle":"HTMLテンプレートHamlitを使う","headerDescription":"Rails標準のHTMLテンプレートはERBが使われています。他にもHamlやSlimといったものがありますが、今回はHamlitというHTMLテンプレートを使う方法を説明します。HamlitはHamlの拡張でHamlをより高速にしたものです。記法はHamlと同様なのでHamlユーザーも利用しやすいでしょう。"},"add_page":{"linkPath":"/rails/add_page/","ogpImage":"/images/rails/add_page/ogp.png","title":"画面作成の基本","subTitle":"rails generate controller","menuIcon":"far fa-newspaper","headerTitle":"Railsで新規画面を作成する基本な流れ","headerDescription":"Railsで新規画面を作成する基本的な流れを説明します。今回は自動生成を使います。rails generate controllerでビューとコントローラーの自動生成をし、適宜画面を編集し画面を作成していきます。"},"use_devise":{"linkPath":"/rails/use_devise/","ogpImage":"/images/rails/use_devise/ogp.png","title":"Deviseで認証を追加する","subTitle":"Devise","menuIcon":"fas fa-passport","headerTitle":"Deviseを利用して認証を追加する","headerDescription":"Deviseを使ってユーザー認証処理を追加して見ます。Deviseはサインアップやログインなど認証の処理を提供してくれる便利なGemです。Deviseは複雑で柔軟性はないですが多機能を提供しているので独自のカスタマイズがなければとても有効です。"}}},"support_tool":{"category":"開発支援ツール","categoryLabel":"Rails","categoryPath":"/rails/","iconClass":"fas fa-hands-helping","menus":{"use_rubocop":{"linkPath":"/rails/use_rubocop/","ogpImage":"/images/rails/use_rubocop/ogp.png","title":"RuboCopを使う","subTitle":"RuboCop","menuIcon":"fas fa-robot","headerTitle":"RuboCopを導入してコードを整理する","headerDescription":"RubocopはRubyコードのスタイルガイドに沿ってコード解析をしてくれるツールです。プロジェクトの開発で実装する人数が増えればソースコードの記述が統一されなくなっていきます。コード解析ツールを使えばスタイルガイドに順守していない場合に警告を表示して知らせてくれます。"}}}}')},304:function(e,t,o){"use strict";o.r(t);var n=o(234),r=o(235),d=o(238),l={components:{ArticlePage:n.a,CodeBox:r.a},data:function(){return{menuSections:d,categoryName:"tutorial",articleName:"scaffold",datePublished:new Date("2019/06/02 22:00:00 +0900"),dateModified:new Date("2020/01/02 01:00:00 +0900"),contents:[{id:"in-link-scaffold",title:"rails generate scaffold"},{id:"in-link-setting-for-generators",title:"自動生成の設定をする"},{id:"in-link-run-migration",title:"マイグレーションを実行する"},{id:"in-link-confirm-new-page",title:"新規画面を表示する"}]}}},v=o(12),component=Object(v.a)(l,(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("article-page",{attrs:{menuSections:e.menuSections,contents:e.contents,categoryName:e.categoryName,articleName:e.articleName,datePublished:e.datePublished,dateModified:e.dateModified}},[o("h1",[e._v("rails generate scaffoldを使ってページを追加する")]),e._v(" "),o("div",{staticClass:"abstract"},[o("p",[e._v("\n        前回の\n        "),o("nuxt-link",{attrs:{to:"/rails/use_mariadb/"}},[e._v("Ruby on RailsでMariaDBを利用する")]),e._v("\n        でデータベースの設定ができました。\n        今回はrails generate scaffoldを使って新規ページを追加してみます。\n      ")],1),e._v(" "),o("p",[e._v("\n        今回の実装内容は\n        "),o("a",{attrs:{href:"https://github.com/irisAsh/rails-todo-tutorial/tree/ver-scaffold",target:"_blank"}},[e._v("こちら")]),e._v("\n        においておきますのでご参照ください。\n      ")])]),e._v(" "),o("h2",{attrs:{id:"in-link-scaffold"}},[e._v("rails generate scaffold")]),e._v(" "),o("p",[o("code",[e._v("rails generate scaffold")]),e._v("を実行すると\n      コントローラー、ビュー、モデル等の必要とするファイルを全て自動生成することができます。\n      実際に動かした方がわかりやすいので実行してみましょう。\n    ")]),e._v(" "),o("p",[o("code",[e._v("rails generate scaffold モデル名 カラム名:カラムの型 ...")]),e._v("の形式でコマンド実行します。\n    ")]),e._v(" "),o("code-box",[e._v("\n$ bin/rails generate scaffold Todo title:string description:text status:integer estimatedDate:datetime\n      invoke  active_record\n      create    db/migrate/20190523123110_create_todos.rb\n      create    app/models/todo.rb\n      invoke  resource_route\n       route    resources :todos\n      invoke  scaffold_controller\n      create    app/controllers/todos_controller.rb\n      invoke    erb\n      create      app/views/todos\n      create      app/views/todos/index.html.erb\n      create      app/views/todos/edit.html.erb\n      create      app/views/todos/show.html.erb\n      create      app/views/todos/new.html.erb\n      create      app/views/todos/_form.html.erb\n      invoke    helper\n      create      app/helpers/todos_helper.rb\n      invoke    jbuilder\n      create      app/views/todos/index.json.jbuilder\n      create      app/views/todos/show.json.jbuilder\n      create      app/views/todos/_todo.json.jbuilder\n      invoke  assets\n      invoke    coffee\n      create      app/assets/javascripts/todos.coffee\n      invoke    scss\n      create      app/assets/stylesheets/todos.scss\n      invoke  scss\n      create    app/assets/stylesheets/scaffolds.scss\n    ")]),e._v(" "),o("p",[e._v("\n      実行すると複数のファイルが作成されているのを確認できます。それぞれ下記の通りです。\n    ")]),e._v(" "),o("h3",[e._v("アセット")]),e._v(" "),o("p",[e._v("JavascriptファイルやCSSファイルです。")]),e._v(" "),o("ul",[o("li",[o("code",[e._v("app/assets/javascripts/todos.coffee")])]),e._v(" "),o("li",[o("code",[e._v("app/assets/stylesheets/scaffolds.scss")])]),e._v(" "),o("li",[o("code",[e._v("app/assets/stylesheets/todos.scss")])])]),e._v(" "),o("h3",[e._v("コントローラー")]),e._v(" "),o("p",[e._v("コントローラー層の処理を記述するファイルです。")]),e._v(" "),o("ul",[o("li",[o("code",[e._v("app/controllers/todos_controller.rb")])])]),e._v(" "),o("h3",[e._v("ビュー")]),e._v(" "),o("p",[e._v("View層の処理を記述するファイルです。")]),e._v(" "),o("ul",[o("li",[o("code",[e._v("app/views/todos/_form.html.erb")])]),e._v(" "),o("li",[o("code",[e._v("app/views/todos/edit.html.erb")])]),e._v(" "),o("li",[o("code",[e._v("app/views/todos/index.html.erb")])]),e._v(" "),o("li",[o("code",[e._v("app/views/todos/new.html.erb")])]),e._v(" "),o("li",[o("code",[e._v("app/views/todos/show.html.erb")])])]),e._v(" "),o("h3",[e._v("ヘルパー")]),e._v(" "),o("p",[e._v("View層で扱う共通処理を記述するファイルです。")]),e._v(" "),o("ul",[o("li",[o("code",[e._v("app/helpers/todos_helper.rb")])])]),e._v(" "),o("h3",[e._v("モデル")]),e._v(" "),o("p",[e._v("モデル定義やモデル層の処理を記述するファイルです。")]),e._v(" "),o("ul",[o("li",[o("code",[e._v("app/models/todo.rb")])])]),e._v(" "),o("h3",[e._v("マイグレーション")]),e._v(" "),o("p",[e._v("マイグレーションのファイルです。")]),e._v(" "),o("ul",[o("li",[o("code",[e._v("db/migrate/20190523124618_create_todos.rb")])])]),e._v(" "),o("h3",[e._v("JSON")]),e._v(" "),o("p",[e._v("\n      API用に値を返すためのJSON定義ファイルです。\n      通常APIは別構成で作成すると思うので削除しても構いません。\n    ")]),e._v(" "),o("ul",[o("li",[o("code",[e._v("app/views/todos/index.json.jbuilder")])]),e._v(" "),o("li",[o("code",[e._v("app/views/todos/show.json.jbuilder")])]),e._v(" "),o("li",[o("code",[e._v("app/views/todos/_todo.json.jbuilder")])])]),e._v(" "),o("p",[o("code",[e._v("rails generate scaffold")]),e._v("で作成すると上記の全てのファイルが作成されますが、\n      個別に必要な単位で自動生成することもできます。\n    ")]),e._v(" "),o("h3",[e._v("rails generate controller")]),e._v(" "),o("p",[e._v("アセット、コントローラー、ビュー、ヘルパーを自動生成します。")]),e._v(" "),o("h3",[e._v("rails generate model")]),e._v(" "),o("p",[e._v("モデル、マイグレーションを自動生成します。")]),e._v(" "),o("h3",[e._v("rails generate migration")]),e._v(" "),o("p",[e._v("マイグレーションを自動生成します。")]),e._v(" "),o("p",[e._v("\n      他にもいくつか"),o("code",[e._v("rails generate")]),e._v("のコマンドはありますがよく利用するのは上記の３つです。\n      また、"),o("code",[e._v("rails generate")]),e._v("を使わずに手動でファイルを作成しても問題はありません。\n      機能の追加などで実装することになれば手動でファイルを作成することが多いでしょう。\n    ")]),e._v(" "),o("h2",{attrs:{id:"in-link-setting-for-generators"}},[e._v("自動生成の設定をする")]),e._v(" "),o("p",[e._v("\n      設定によって"),o("code",[e._v("rails generate")]),e._v("で生成されるファイルを限定することができます。\n      設定ファイルは"),o("code",[e._v("config/application.rb")]),e._v("です。\n      ファイル内の"),o("code",[e._v("config.generators")]),e._v("を編集することで自動生成ファイルを指定できます。\n    ")]),e._v(" "),o("p",[e._v("ここではアセットとヘルパーを自動生成させないように設定します。")]),e._v(" "),o("code-box",{attrs:{fileName:"config/application.rb"}},[e._v("\nmodule RailsTodoTutorial\n  class Application < Rails::Application\n    # Initialize configuration defaults for originally generated Rails version.\n    config.load_defaults 5.2\n\n    ...\n\n    # ここを追加\n    # Settings for generators\n    config.generators do |g|\n      g.stylesheets false       # 自動生成させない場合に false を設定します\n      g.javascripts false\n      g.helper false\n    end\n  end\nend\n    ")]),e._v(" "),o("p",[e._v("\n      設定したら再度"),o("code",[e._v("rails generate scaffold")]),e._v("を実行してみてください。\n      （先程実行していた場合は生成されたファイルを削除するか、\n      "),o("code",[e._v("git clean")]),e._v("すれば"),o("code",[e._v("scaffold")]),e._v("実行前に戻せます。）\n      すると自動生成不要の設定をした対象は作成されていないことが確認できます。\n    ")]),e._v(" "),o("code-box",[e._v("\n$ bin/rails generate scaffold Todo title:string description:text status:integer estimatedDate:datetime\n      invoke  active_record\n      create    db/migrate/20190523124618_create_todos.rb\n      create    app/models/todo.rb\n      invoke  resource_route\n       route    resources :todos\n      invoke  scaffold_controller\n      create    app/controllers/todos_controller.rb\n      invoke    erb\n      create      app/views/todos\n      create      app/views/todos/index.html.erb\n      create      app/views/todos/edit.html.erb\n      create      app/views/todos/show.html.erb\n      create      app/views/todos/new.html.erb\n      create      app/views/todos/_form.html.erb\n      invoke    jbuilder\n      create      app/views/todos/index.json.jbuilder\n      create      app/views/todos/show.json.jbuilder\n      create      app/views/todos/_todo.json.jbuilder\n      invoke  assets\n      invoke    coffee\n      invoke    scss\n    ")]),e._v(" "),o("h2",{attrs:{id:"in-link-run-migration"}},[e._v("マイグレーションを実行する")]),e._v(" "),o("p",[o("code",[e._v("scaffold")]),e._v("で自動生成されたファイルの中にモデルファイル(app/models配下)とマイグレーションファイル(db/migrate配下)があります。\n      モデルファイルはDBのテーブルを操作するためのファイルです。ここでテーブル単位の共通関数などを追加して実装していきます。\n    ")]),e._v(" "),o("p",[e._v("\n      マイグレーションファイルはテーブル定義を登録・編集するためのファイルです。\n      Railsの開発ではDBコンソール上でDDLを直接実行することはありません。\n      このマイグレーションファイルを使ってテーブル定義を操作します。\n    ")]),e._v(" "),o("p",[o("code",[e._v("scaffold")]),e._v("で作成されたマイグレーションファイルの中身をみてください。\n    ")]),e._v(" "),o("code-box",{attrs:{fileName:"db/migrate/20190523124618_create_todos.rb"}},[e._v("\nclass CreateTodos < ActiveRecord::Migration[5.2]\n  def change\n    create_table :todos do |t|\n      t.string :title\n      t.text :description\n      t.integer :status\n      t.datetime :estimatedDate\n\n      t.timestamps\n    end\n  end\nend\n    ")]),e._v(" "),o("p",[e._v("\n      マイグレーションファイルについてはまた詳しく説明しようと思いますので、ここでは簡単な説明をします。\n    ")]),e._v(" "),o("p",[o("code",[e._v("create_table :todos")]),e._v("はテーブル作成のメソッドです。\n      これによりDBに"),o("code",[e._v("todos")]),e._v("というテーブルが作成されます。\n      "),o("code",[e._v("t.string :title")]),e._v("はカラム定義を表していて、\n      "),o("code",[e._v("t.データ型 :カラム名")]),e._v("の形式になっています。\n    ")]),e._v(" "),o("p",[o("code",[e._v("t.timestamps")]),e._v("は"),o("code",[e._v("created_at")]),e._v("と"),o("code",[e._v("updated_at")]),e._v("のカラム定義で、\n      Railsでは自動でデータの作成時間と更新時間が定義されるようになっています。\n    ")]),e._v(" "),o("h3",[e._v("カラムに制約をつける")]),e._v(" "),o("p",[e._v("\n      マイグレーション前にカラムの制約をつけるように設定しておきましょう。\n      付与する制約は以下です。\n    ")]),e._v(" "),o("ul",[o("li",[e._v("titleにNOT NULL制約を付与。")]),e._v(" "),o("li",[e._v("statusにNOT NULL制約を付与、さらに初期値0が登録されるようにする。")])]),e._v(" "),o("p",[o("code",[e._v("null: false")]),e._v("を"),o("code",[e._v("t.カラム型")]),e._v("の引数に追加すると、\n      マイグレーション時にNOT NULL制約が付与されます。\n      また"),o("code",[e._v("default: 値")]),e._v("を引数に追加すると初期値の設定ができます。\n    ")]),e._v(" "),o("code-box",[e._v("\nclass CreateTodos < ActiveRecord::Migration[5.2]\n  def change\n    create_table :todos do |t|\n      t.string :title, null: false\n      t.text :description\n      t.integer :status, null: false, default: 0\n      t.datetime :estimatedDate\n\n      t.timestamps\n    end\n  end\nend\n    ")]),e._v(" "),o("h3",[e._v("マイグレーションの実行")]),e._v(" "),o("p",[e._v("\n      マイグレーション実行は"),o("code",[e._v("bin/rails db:migrate")]),e._v("のコマンドでできます。\n    ")]),o("p",[o("code-box",[e._v("\n$ bin/rails db:migrate\n== 20190523124618 CreateTodos: migrating ======================================\n-- create_table(:todos)\n   -< 0.0088s\n== 20190523124618 CreateTodos: migrated (0.0090s) =============================\n    ")])],1),o("p",[e._v("\n      実行すると"),o("code",[e._v("db/schema.rb")]),e._v("ファイルが作成されます。\n      このファイルが実際にDBのテーブル定義を管理するファイルとなっています。\n    ")]),e._v(" "),o("code-box",{attrs:{fileName:"db/schema.rb"}},[e._v('\nActiveRecord::Schema.define(version: 2019_05_23_124618) do\n\n  create_table "todos", options: "ENGINE=InnoDB DEFAULT CHARSET=utf8", force: :cascade do |t|\n    t.string "title", null: false\n    t.text "description"\n    t.integer "status", default: 0, null: false\n    t.datetime "estimatedDate"\n    t.datetime "created_at", null: false\n    t.datetime "updated_at", null: false\n  end\n\nend\n    ')]),e._v(" "),o("h2",{attrs:{id:"in-link-confirm-new-page"}},[e._v("新規画面を表示する")]),e._v(" "),o("p",[e._v("\n      Railsでは特定の決まっているルーティングが用意されています。\n      "),o("code",[e._v("bin/rails route")]),e._v("で現在プロジェクトに定義されているルーティングの一覧が見れます。\n      "),o("code",[e._v("rails generate scaffold Todo")]),e._v("によって\n      "),o("code",[e._v("/todos/")]),e._v("で始まるエンドポイントのルーティングが追加されていることが確認できます。\n    ")]),e._v(" "),o("code-box",[e._v("\n$ bin/rails route\n        Prefix Verb   URI Pattern                 Controller#Action\n        todos GET    /todos(.:format)            todos#index\n              POST   /todos(.:format)            todos#create\n      new_todo GET    /todos/new(.:format)        todos#new\n    edit_todo GET    /todos/:id/edit(.:format)   todos#edit\n          todo GET    /todos/:id(.:format)        todos#show\n              PATCH  /todos/:id(.:format)        todos#update\n              PUT    /todos/:id(.:format)        todos#update\n              DELETE /todos/:id(.:format)        todos#destroy\n    ")]),e._v(" "),o("p",[e._v("\n      ルーティングの設定ファイルは"),o("code",[e._v("config/routes.rb")]),e._v("に記述されています。\n      "),o("code",[e._v("scaffold")]),e._v("で"),o("code",[e._v("resources :todos")]),e._v("という行が追加されます。\n      この"),o("code",[e._v("resources")]),e._v("が上記のエンドポイントを定義しています。\n    ")]),e._v(" "),o("code-box",{attrs:{fileName:"config/routes.rb"}},[e._v("\nRails.application.routes.draw do\n  resources :todos\nend\n    ")]),e._v(" "),o("p",[e._v("エンドポイントと処理の関係は次の通りです。")]),e._v(" "),o("table",[o("tr",[o("th",[e._v("エンドポイント")]),e._v(" "),o("th",[e._v("HTTPメソッド")]),e._v(" "),o("th",[e._v("処理内容")])]),e._v(" "),o("tr",[o("td",[e._v("/todos")]),e._v(" "),o("td",[e._v("GET")]),e._v(" "),o("td",[e._v("Todo一覧画面表示")])]),e._v(" "),o("tr",[o("td",[e._v("/todos")]),e._v(" "),o("td",[e._v("POST")]),e._v(" "),o("td",[e._v("Todo作成処理")])]),e._v(" "),o("tr",[o("td",[e._v("/todos/new")]),e._v(" "),o("td",[e._v("GET")]),e._v(" "),o("td",[e._v("Todo新規登録画面表示")])]),e._v(" "),o("tr",[o("td",[e._v("/todos/TodoのID/edit")]),e._v(" "),o("td",[e._v("GET")]),e._v(" "),o("td",[e._v("Todo編集画面表示")])]),e._v(" "),o("tr",[o("td",[e._v("/todos/TodoのID")]),e._v(" "),o("td",[e._v("GET")]),e._v(" "),o("td",[e._v("Todoの詳細画面表示")])]),e._v(" "),o("tr",[o("td",[e._v("/todos/TodoのID")]),e._v(" "),o("td",[e._v("PATCH/PUT")]),e._v(" "),o("td",[e._v("Todo編集処理")])]),e._v(" "),o("tr",[o("td",[e._v("/todos/TodoのID")]),e._v(" "),o("td",[e._v("DELETE")]),e._v(" "),o("td",[e._v("Todo削除処理")])])]),e._v(" "),o("p",[e._v("\n      では"),o("code",[e._v("bin/rails s")]),e._v("を実行して\n      "),o("code",[e._v("http://localhost:3000/todos")]),e._v("にアクセスしてみましょう。\n      するとTodoの一覧画面が表示されます。\n    ")]),e._v(" "),o("amp-img",{attrs:{src:"/images/rails/scaffold/index-page.png",alt:"Index画面",title:"Index画面",width:"640",height:"509",layout:"responsive"}}),e._v(" "),o("p",[e._v("\n      次に画面下の「New Todo」のリンクを押してみましょう。\n      すると新規登録画面("),o("code",[e._v("/todos/new")]),e._v(")へ飛びます。\n    ")]),e._v(" "),o("amp-img",{attrs:{src:"/images/rails/scaffold/new-page.png",alt:"New画面",title:"New画面",width:"640",height:"509",layout:"responsive"}}),e._v(" "),o("p",[e._v("\n      適当に値を入力して「create todo」をしてみてください。\n      するとTodoデータが１件登録されます。\n      追加された後は詳細画面("),o("code",[e._v("/todos/1")]),e._v(")へリダイレクトされます。\n    ")]),e._v(" "),o("amp-img",{attrs:{src:"/images/rails/scaffold/inputed-new-page.png",alt:"入力後New画面",title:"入力後New画面",width:"640",height:"509",layout:"responsive"}}),e._v(" "),o("amp-img",{attrs:{src:"/images/rails/scaffold/show-page.png",alt:"詳細画面",title:"詳細画面",width:"640",height:"509",layout:"responsive"}}),e._v(" "),o("p",[e._v("\n      Backからもう一度一覧画面に戻ると一覧にデータが１つ追加されていることが確認できます。\n    ")]),e._v(" "),o("amp-img",{attrs:{src:"/images/rails/scaffold/one-data.png",alt:"登録後画面",title:"登録後画面",width:"640",height:"509",layout:"responsive"}}),e._v(" "),o("p",[e._v("\n      他にも「Edit」「Delete」で画面操作を試してみてください。\n      上の表にあるエンドポイントが呼ばれそれぞれの処理が実行されることが確認できます。\n    ")]),e._v(" "),o("p",[e._v("\n      次のステップ：\n      "),o("nuxt-link",{attrs:{to:"/rails/use_hamlit/"}},[e._v("Hamlitを使う")])],1)],1)}),[],!1,null,null,null);t.default=component.exports}}]);