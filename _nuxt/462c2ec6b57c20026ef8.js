(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{296:function(e,n,o){"use strict";o.r(n);var t=o(235),v=o(236),_=o(85),r={components:{ArticlePage:t.a,CodeBox:v.a},data:function(){return{menuSections:_,categoryName:"routing_view",articleName:"express_session",datePublished:new Date("2019/04/27 22:00:00 +0900"),dateModified:new Date("2019/12/29 20:00:00 +0900"),contents:[{id:"in-link-express-session",title:"express-sessionの設定"},{id:"in-link-how-to-use-session",title:"セッションの使い方"},{id:"in-link-connect-mongo",title:"MongoDBでセッションを管理する"},{id:"in-link-connect-redis",title:"Redisでセッションを管理する"}]}}},c=o(12),component=Object(c.a)(r,(function(){var e=this,n=e.$createElement,o=e._self._c||n;return o("article-page",{attrs:{menuSections:e.menuSections,contents:e.contents,categoryName:e.categoryName,articleName:e.articleName,datePublished:e.datePublished,dateModified:e.dateModified}},[o("h1",[e._v("Expressでセッションを利用する")]),e._v(" "),o("div",{staticClass:"abstract"},[o("p",[e._v("\n        Expressでセッション管理するためには\n        "),o("a",{attrs:{href:"https://github.com/expressjs/session",target:"_blank"}},[e._v("express-session")]),e._v("\n        というミドルウェアを使います。\n        セッションはデフォルトではメモリに保存されますが、外部パッケージを利用することでRedisやMongoDBに保存先を変更することができます。\n      ")]),e._v(" "),o("p",[e._v("\n        また、本ページのexpress-sessionnのサンプルコードを\n        "),o("a",{attrs:{href:"https://github.com/irisAsh/express-session-tutorial"}},[e._v("Github")]),e._v("\n        においていますのでご参考ください。\n      ")])]),e._v(" "),o("h2",{attrs:{id:"in-link-express-session"}},[e._v("express-sessionの設定")]),e._v(" "),o("p",[e._v("先ずはインストールです。"),o("code",[e._v("yarn")]),e._v("でパッケージをインストールします。")]),e._v(" "),o("code-box",[e._v("\n$ yarn add express-session\n    ")]),e._v(" "),o("p",[e._v("インストールしたら、express-sessionを設定する実装をしましょう。"),o("code",[e._v("app.js")]),e._v("を編集します。")]),e._v(" "),o("code-box",{attrs:{fileName:"app.js"}},[e._v("\nvar logger = require('morgan');\nvar session = require(\"express-session\"); // 追加\n...\n\napp.use(express.static(path.join(__dirname, 'public')));\n\n// 追加\napp.use(session({\nsecret: \"secret word\",\nresave: false,\nsaveUninitialized: false,\ncookie: {\n  maxAge: 60 * 1000\n}\n}));\n    ")]),e._v(" "),o("p",[o("code",[e._v("session({ オプション })")]),e._v("でexpress-sessionの設定をします。簡単にですがオプションの説明をしておきます。")]),e._v(" "),o("h3",[e._v("secret")]),e._v(" "),o("p",[e._v("\n      クッキーに保存するセッションIDを署名するために使用される秘密ワードです。文字列または配列を設定できます。\n      配列を設定した場合は署名時には配列の最初の文字列をしようし、署名検証には配列のすべての文字列が考慮されます。\n    ")]),e._v(" "),o("h3",[e._v("resave")]),e._v(" "),o("p",[e._v("\n      セッションをセッションストアに強制的に保存するかどうかの設定です。\n      （"),o("code",[e._v("true")]),e._v("にするとセッションの変更なしでも保存されます）\n      通常は"),o("code",[e._v("false")]),e._v("で良いです。\n    ")]),e._v(" "),o("h3",[e._v("saveUninitialized")]),e._v(" "),o("p",[e._v("\n      初期化されていないセッションを強制的に保存するかどうかの設定です。\n      通常は"),o("code",[e._v("false")]),e._v("で良いです。\n    ")]),e._v(" "),o("h3",[e._v("cookie")]),e._v(" "),o("p",[e._v("\n      セッションIDのクッキーの設定を指定できます。\n      ここでは"),o("code",[e._v("maxAge")]),e._v("(ミリ秒)でクッキーの保存期間を１分に設定しています。\n    ")]),e._v(" "),o("h2",{attrs:{id:"in-link-how-to-use-session"}},[e._v("セッションの使い方")]),e._v(" "),o("p",[e._v("下図のようにページを訪れた回数をセッションを使って表示します。")]),e._v(" "),o("amp-img",{attrs:{src:"/images/express/express_session/home_page.png",alt:"Home画面",title:"Home画面",width:"640",height:"529",layout:"responsive"}}),e._v(" "),o("p",[e._v("実装は下記のようになります。")]),e._v(" "),o("code-box",{attrs:{fileName:"routes/index.js"}},[e._v("\nrouter.get('/', function(req, res, next) {\nvar session = req.session;\nif (!!session.visitCount) {\n  session.visitCount += 1;\n} else {\n  session.visitCount = 1;\n}\nres.render('index', { visitCount: session.visitCount });\n});\n    ")]),e._v(" "),o("p",[e._v("\n      express-sessionを設定したことにより、"),o("code",[e._v("req.session")]),e._v("からセッションを取得することができます。\n      ここでは訪問回数は"),o("code",[e._v("visitCount")]),e._v("に保存するようにし、初期値があれば１回分カウント、なければ１を設定するようにしています。\n    ")]),e._v(" "),o("p",[e._v("\n      実際に画面を開くと、画面を更新する度に訪問回数が増えていくのが確認できます。\n      また、今回はセッションの設定で保存時間を１分に設定しているので１分以上経ってから画面を更新すると訪問回数が１回に戻るようになっています。\n    ")]),e._v(" "),o("amp-img",{attrs:{src:"/images/express/express_session/visit_five_times.png",alt:"訪問回数",title:"訪問回数",width:"640",height:"529",layout:"responsive"}}),e._v(" "),o("h2",{attrs:{id:"in-link-connect-mongo"}},[e._v("MongoDBでセッションを管理する")]),e._v(" "),o("p",[e._v("\n      セッションの格納先をメモリ上からMongoDBに変更してみましょう。\n      MongoDBと連携するパッケージはいくつかありますが、ここでは\n      "),o("a",{attrs:{href:"https://github.com/jdesboeufs/connect-mongo",target:"_blank"}},[e._v("connect-mongo")]),e._v("\n      を使ってみます。\n    ")]),e._v(" "),o("p",[e._v("また、MongoDBのインストールや使い方は以下を参考にしてください。")]),e._v(" "),o("ul",[o("li",[o("nuxt-link",{attrs:{to:"/express/mongodb/"}},[e._v("Express入門（MongoDBの利用）")])],1),e._v(" "),o("li",[o("nuxt-link",{attrs:{to:"/express/mongoose/"}},[e._v("Express入門（Mongooseの利用）")])],1)]),e._v(" "),o("h3",[e._v("インストール")]),e._v(" "),o("code-box",[e._v("\n$ yarn add connect-mongo\n    ")]),e._v(" "),o("h3",[e._v("実装")]),e._v(" "),o("code-box",{attrs:{fileName:"app.js"}},[e._v("\n...\nvar session = require(\"express-session\");\nvar MongoStore = require('connect-mongo')(session); // 追加\n...\n\napp.use(express.static(path.join(__dirname, 'public')));\n\napp.use(session({\n  secret: \"secret word\",\n  resave: false,\n  saveUninitialized: false,\n  // 変更\n  store: new MongoStore({\n    url: 'mongodb://127.0.0.1:27017/express-sesstion-tutorial',\n    ttl: 60\n  })\n}));\n    ")]),e._v(" "),o("p",[e._v("\n      sessionの"),o("code",[e._v("store")]),e._v("オプションにセッションの格納先を指定をすることができます。\n      "),o("code",[e._v("require('connect-mongo')(session)")]),e._v("でExpressとconnect-mongoの連携を行い、"),o("code",[e._v("store")]),e._v("オプションに指定します。\n    ")]),e._v(" "),o("p",[e._v("\n      connect-mongoのオプションには"),o("code",[e._v("url")]),e._v("にMongoDBのURLを指定する必要があります。\n      また、セッションの保存期間には"),o("code",[e._v("ttl")]),e._v("オプション（単位は秒）を使います。\n      これはMongoDBのTTLインデックスを利用しています。TTLは指定した時間を過ぎると自動的にデータを削除するMongoDBの機能です。\n    ")]),e._v(" "),o("h3",[e._v("確認")]),e._v(" "),o("p",[e._v("\n      先程と同様に訪問回数を確認してください。\n      また、MongoDBコンソールでデータの中身を確認してみると実際にセッションか保存されていることがわかります。\n    ")]),e._v(" "),o("p",[o("code",[e._v("sessions")]),e._v("コレクションにセッションが保存されています。")]),e._v(" "),o("code-box",[e._v('\n$ mongo\n...\n\n> use express-sesstion-tutorial\nsessions\n> db.sessions.find()\n{ "_id" : "Z9rKh7pJnj1cM6SCxkz2ZCMUEeFuAqxL", "expires" : ISODate("2019-04-21T15:12:49.411Z"), "session" : "{\\"cookie\\":{\\"originalMaxAge\\":null,\\"expires\\":null,\\"httpOnly\\":true,\\"path\\":\\"/\\"},\\"visitCount\\":2}" }\n    ')]),e._v(" "),o("h2",{attrs:{id:"in-link-connect-redis"}},[e._v("Redisでセッションを管理する")]),e._v(" "),o("p",[e._v("MongoDBの時と同様にRedisを使ってセッション管理ができるようにしてみましょう。")]),e._v(" "),o("p",[e._v("\n      Redisと連携するパッケージ\n      "),o("a",{attrs:{href:"https://github.com/tj/connect-redis",target:"_blank"}},[e._v("connect-redis")]),e._v("\n      を使って実装します。\n    ")]),e._v(" "),o("p",[e._v("\n      また、Redis自体の使い方については\n      "),o("nuxt-link",{attrs:{to:"/redis/setup/"}},[e._v("Redisの環境設定")]),e._v("\n      をご参考ください。\n    ")],1),e._v(" "),o("h3",[e._v("インストール")]),e._v(" "),o("code-box",[e._v("\n$ yarn add connect-redis\n    ")]),e._v(" "),o("h3",[e._v("実装")]),e._v(" "),o("code-box",{attrs:{fileName:"app.js"}},[e._v("\nvar session = require(\"express-session\");\n// 追加\nvar RedisStore = require('connect-redis')(session);\n...\n\napp.use(express.static(path.join(__dirname, 'public')));\n\napp.use(session({\n  secret: \"secret word\",\n  resave: false,\n  saveUninitialized: false,\n  // 追加\n  store: new RedisStore({\n    host: '127.0.0.1',\n    port: 6379,\n    prefix: 'session-tutorial:',\n    ttl: 60\n  })\n}));\n    ")]),e._v(" "),o("p",[e._v("\n      Expressとconnect-redisの連携は"),o("code",[e._v("require('connect-mongo')(session)")]),e._v("で設定します。\n    ")]),e._v(" "),o("p",[e._v("\n      まず、"),o("code",[e._v("express-session")]),e._v("の"),o("code",[e._v("store")]),e._v("オプションにRedisを指定します。\n      また"),o("code",[e._v("connect-redis")]),e._v("のオプションについてですが、"),o("code",[e._v("host")]),e._v("と"),o("code",[e._v("port")]),e._v("オプションにはRedisの場所を指定します。\n      初期設定であればホストが"),o("code",[e._v("127.0.0.1")]),e._v("で、ポートが"),o("code",[e._v("6379")]),e._v("です。\n    ")]),e._v(" "),o("p",[o("code",[e._v("prefix")]),e._v("はRedisに保存する時のキーの接頭辞になります。\n      上記の場合は"),o("code",[e._v("session-tutorial:ランダム値")]),e._v("の形式でキーが作成されます。\n    ")]),e._v(" "),o("p",[o("code",[e._v("ttl")]),e._v("はセッションの保存期間で単位は秒です。")])],1)}),[],!1,null,null,null);n.default=component.exports}}]);