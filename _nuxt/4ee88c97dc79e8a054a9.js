(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{295:function(e,n,o){"use strict";o.r(n);var t=o(235),r=o(236),v=o(85),d={components:{ArticlePage:t.a,CodeBox:r.a},data:function(){return{menuSections:v,categoryName:"routing_view",articleName:"express_session",datePublished:new Date("2019/03/09 22:00:00 +0900"),dateModified:new Date("2020/01/02 01:00:00 +0900"),contents:[{id:"in-link-create-home-router",title:"homeルートの追加"},{id:"in-link-use-middle-ware",title:"ミドルウェアの使用"},{id:"in-link-redirect",title:"リダイレクト"},{id:"in-link-add-controller",title:"コントローラーの作成"},{id:"in-link-home-page",title:"Home画面の整形"},{id:"in-link-todo-pages",title:"TODO画面のルーティング"}]}}},_=o(12),component=Object(_.a)(d,(function(){var e=this,n=e.$createElement,o=e._self._c||n;return o("article-page",{attrs:{menuSections:e.menuSections,contents:e.contents,categoryName:e.categoryName,articleName:e.articleName,datePublished:e.datePublished,dateModified:e.dateModified}},[o("h1",[e._v("Express入門（ルーティング）")]),e._v(" "),o("div",{staticClass:"abstract"},[o("p",[e._v("\n        ホーム画面を用意するためにルーティングを設定します。\n        ルーティングとは、アクセスされたURIとそれに対するアプリケーションの挙動(画面の描画やデータの操作など)を決めることです。\n        ここでは"),o("code",[e._v("/home/")]),e._v("というURIにアクセスした時の挙動を定義していきます。\n      ")])]),e._v(" "),o("h2",{attrs:{id:"in-link-create-home-router"}},[e._v("homeルートの追加")]),e._v(" "),o("p",[e._v("\n      まずは"),o("code",[e._v("/home")]),e._v("のエンドポイント(URI)を開きます。\n      とりあえず"),o("code",[e._v("/home")]),e._v("のアクセス時の挙動は"),o("code",[e._v("/")]),e._v("にアクセスした時の挙動と同じにしておきます。\n    ")]),e._v(" "),o("code-box",{attrs:{fileName:"app.js"}},[e._v("\n...\napp.use('/', indexRouter);\napp.use('/users', usersRouter);\n// 下記を追加\napp.get('/home', function(req, res, next) {\n  res.render('index', { title: 'Express' });\n});\n...\n    ")]),e._v(" "),o("p",[e._v("\n      ファイルを保存したら、"),o("code",[e._v("http://localhost:3000/home")]),e._v("にアクセスしてみましょう。\n      "),o("code",[e._v("http://localhost:3000")]),e._v("と同じ画面が表示されているはずです。\n    ")]),e._v(" "),o("h2",{attrs:{id:"in-link-use-middle-ware"}},[e._v("ミドルウェアの使用")]),e._v(" "),o("p",[e._v("\n      Expressのミドルウェアはいくつかの種類のミドルウェアが使用できますが、\n      ここではルーターレベルのミドルウェアを使用します。\n      このミドルウェアを使ってルーティング処理をモジュール化することができます。\n      これによってルーティングを細分化して定義したり処理の共通化を行うことができます。\n    ")]),e._v(" "),o("p",[e._v("\n      今回は、"),o("code",[e._v("/home")]),e._v("および"),o("code",[e._v("/home")]),e._v("以下のURI\n      （例えば"),o("code",[e._v("/home/help")]),e._v("や"),o("code",[e._v("/home/about")]),e._v("）の挙動を定義するモジュールを作成します。\n    ")]),e._v(" "),o("p",[e._v("\n      基本的にルーターのモジュールは"),o("code",[e._v("routes")]),e._v("フォルダ配下に作成していきます。\n      まずは下記の内容で"),o("code",[e._v("routes/home.js")]),e._v("を作成してください。\n    ")]),e._v(" "),o("code-box",{attrs:{fileName:"routes/home.js"}},[e._v("\nvar express = require('express');\nvar router = express.Router();\n\nrouter.get('/', function(req, res, next) {\n  res.render('index', { title: 'Express' });\n});\n\nmodule.exports = router;\n    ")]),e._v(" "),o("p",[o("code",[e._v("express.Router")]),e._v("クラスを使ってルーターレベルのミドルウェアを利用できます。\n      ここでは"),o("code",[e._v("/home")]),e._v("のGETリクエストを定義するため"),o("code",[e._v("router.get()")]),e._v("を使っています。\n      第一引数には"),o("code",[e._v("/home")]),e._v("以下のパス（"),o("code",[e._v("/home")]),e._v("自信を設定するため"),o("code",[e._v("/")]),e._v("）を指定し、\n      また第二引数には"),o("code",[e._v("views/index.pug")]),e._v("を描画する処理を指定しています。\n    ")]),e._v(" "),o("p",[e._v("\n      さて、このモジュールをメインアプリケーションに設定するため"),o("code",[e._v("app.js")]),e._v("を編集します。\n    ")]),e._v(" "),o("code-box",{attrs:{fileName:"app.js.prettyprint"}},[e._v("\n...\nvar indexRouter = require('./routes/index');\nvar usersRouter = require('./routes/users');\nvar homeRouter = require('./routes/home'); // 追加 home.jsで定義した内容を取り込んでいます\n...\napp.use('/', indexRouter);\napp.use('/users', usersRouter);\n// 先程追加したapp.get('/homw', ...)は削除\napp.use('/home', homeRouter); // 追加 /home以下の処理をhome.jsに担わせています\n...\n    ")]),e._v(" "),o("p",[o("code",[e._v("http://localhost:3000/home")]),e._v("を確認すると先程と同じ挙動になっていることが確認できます。\n    ")]),e._v(" "),o("h2",{attrs:{id:"in-link-redirect"}},[e._v("リダイレクト")]),e._v(" "),o("p",[e._v("\n      最後に"),o("code",[e._v("http://localhost:3000")]),e._v("にアクセスされた場合は、\n      ホーム画面"),o("code",[e._v("http://localhost:3000/home")]),e._v("にリダイレクトするようにしましょう。\n    ")]),e._v(" "),o("p",[o("code",[e._v("routes/index.js")]),e._v("を下記のように編集するとリダイレクトするようになります。\n    ")]),e._v(" "),o("code-box",{attrs:{fileName:"routes/index.js.prettyprint"}},[e._v("\nrouter.get('/', function(req, res, next) {\n  res.redirect('/home'); // 変更\n});\n    ")]),e._v(" "),o("h2",{attrs:{id:"in-link-add-controller"}},[e._v("コントローラーの作成")]),e._v(" "),o("p",[e._v("\n      ルーティングファイルに処理を書いていっても良いのですが、\n      ルーティングファイルにはアクセスパスの振分だけにしておきたいので、\n      具体的な振る舞いはコントローラーとして分けておきましょう。\n    ")]),e._v(" "),o("p",[o("code",[e._v("controllers")]),e._v("フォルダを、その配下に"),o("code",[e._v("homeController.js")]),e._v("を作成し、\n      ルーティングファイルに書いた内容を"),o("code",[e._v("homeController.js")]),e._v("に移しましょう。\n    ")]),e._v(" "),o("code-box",[e._v("\n$ mkdir controllers\n$ touch controllers/homeController.js\n    ")]),e._v(" "),o("p"),e._v(" "),o("code-box",{attrs:{fileName:"controllers/homeController.js"}},[e._v("\nexports.index = function(req, res) {\n  res.render('home/index');\n};\n    ")]),e._v(" "),o("p"),e._v(" "),o("code-box",{attrs:{fileName:"routes/home.js"}},[e._v("\nvar express = require('express');\nvar router = express.Router();\n\nvar homeController = require('../controllers/homeController'); // 追加\n\nrouter.get('/', homeController.index); // 変更\n    ")]),e._v(" "),o("h2",{attrs:{id:"in-link-home-page"}},[e._v("Home画面の整形")]),e._v(" "),o("p",[e._v("\n      Homeの画面をモックデータを使ってTODOアプリ用に整形しておきましょう。\n      "),o("code",[e._v("render")]),e._v("の第２引数にオブジェクト形式でView層にデータを渡すことができます。\n    ")]),e._v(" "),o("code-box",{attrs:{fileName:"homeController.js"}},[e._v("\nexports.index = function(req, res) {\n  res.render('home/index', {\n    remainingTodoCount: 4,\n    todayTodoCount: 2,\n    completedTodoCount: 1\n  });\n};\n    ")]),e._v(" "),o("p",[e._v("\n      ここではテンプレートファイルにPugを使っているので、\n      "),o("code",[e._v("#{変数名}")]),e._v("でController層から渡された値を描画できます。\n      Pugの詳しい使い方は\n      "),o("nuxt-link",{attrs:{to:"/express/pug_reference/"}},[e._v("Pug(HTMLテンプレートエンジン)の書き方まとめ")]),e._v("\n      にまとめているのでご覧ください。\n    ")],1),e._v(" "),o("code-box",{attrs:{fileName:"home/index.pug"}},[e._v("\nextends ../layout\n\nblock content\n  h1 TODO アプリ\n  p\n    | 残りのTODO: #{remainingTodoCount} [\n    a(href='/todo') 一覧へ\n    |  ]\n  p\n    | 今日のTODO: #{todayTodoCount} [\n    a(href='/todo/today') 一覧へ\n    |  ]\n  p\n    | 完了済TODO: #{completedTodoCount} [\n    a(href='/todo/completed') 一覧へ\n    |  ]\n  a(href='/todo/create') TODOの追加\n    ")]),e._v(" "),o("p",[e._v("下のように画面が表示されます。")]),e._v(" "),o("amp-img",{attrs:{src:"/images/express/edit_routing/home_page.png",alt:"Home画面",title:"Home画面",width:"640",height:"589",layout:"responsive"}}),e._v(" "),o("h2",{attrs:{id:"in-link-todo-pages"}},[e._v("TODO画面のルーティング")]),e._v(" "),o("p",[e._v("\n      ついでにTODOの一覧を表示する画面と作成する画面を用意してみましょう。\n      実際にデータ取得や作成処理を実装するにはDBを利用します。\n      実装については"),o("nuxt-link",{attrs:{to:"/express/mongodb/"}},[e._v("ExpressでMongoDBを使う")]),e._v("をご参照ください。\n    ")],1),e._v(" "),o("p",[e._v("\n      Homeと同じようにルーティングを追加します。\n      "),o("code",[e._v("routes/todo.js")]),e._v(", "),o("code",[e._v("controllers/todoController.js")]),e._v("はHomeとほぼ同様です。\n    ")]),e._v(" "),o("h3",[e._v("ルーティング")]),e._v(" "),o("p",[e._v("一覧画面は"),o("code",[e._v("/todo/")]),e._v("、作成画面は"),o("code",[e._v("/todo/create")]),e._v("としています。")]),e._v(" "),o("code-box",{attrs:{fileName:"routes/todo.js"}},[e._v("\n省略\n...\nrouter.get('/', todoController.index);\nrouter.get('/create', todoController.createGet);\n...\n    ")]),e._v(" "),o("h3",[e._v("コントローラー")]),e._v(" "),o("p",[o("code",[e._v("res.render")]),e._v("の引数には"),o("code",[e._v("views")]),e._v("配下のファイルパスを指定します。\n      拡張子"),o("code",[e._v(".pug")]),e._v("は省略可能です。\n    ")]),e._v(" "),o("p",[e._v("\n      また、TODOの作成はフォーム画面を"),o("code",[e._v("createGet")]),e._v("、\n      作成処理を"),o("code",[e._v("createPost")]),e._v("と関数を命名していきます。\n    ")]),e._v(" "),o("code-box",{attrs:{fileName:"controllers/todoController.js"}},[e._v("\n省略\n...\nexports.index = function(req, res) {\n  res.render('todo/index');\n}\nexports.createGet = function(req, res) {\n  res.render('todo/create');\n};\n...\n    ")]),e._v(" "),o("h3",[e._v("TODO一覧画面")]),e._v(" "),o("p",[e._v("一覧画面の実装内容は以下です。")]),e._v(" "),o("code-box",{attrs:{fileName:"views/todo/index.pug"}},[e._v("\nextends ../layout\n\nblock content\n  h1 残りのTODO\n  ul\n    li\n      p 買い物\n      p リンゴを買う\n      p progress\n      p 2019/03/21\n      p\n\t| [\n\ta(href='') 編集\n\t| ]\n      p\n\t| [\n\ta(href='') 削除\n\t| ]\n  p\n    a(href='/') 戻る\n    ")]),e._v(" "),o("amp-img",{attrs:{src:"/images/express/edit_routing/todo_list.png",alt:"Todo一覧画面",title:"Todo一覧画面",width:"640",height:"774",layout:"responsive"}}),e._v(" "),o("h3",[e._v("TODO作成画面")]),e._v(" "),o("p",[e._v("作成画面の実装内容は以下です。")]),e._v(" "),o("code-box",{attrs:{fileName:"views/todo/create.pug"}},[e._v("\nextends ../layout\n\nblock content\n  h1 TODO 作成\n\n  form(method='POST' action='/todo/create')\n    div\n      label(for='title') タイトル：\n      input#title(type='text', placeholder='やること' name='title' required='true' value='' )\n    div\n      label(for='description') 詳細説明：\n      input#description(type='text', placeholder='買い物に行く' name='description' value='' )\n    div\n      label(for='status') ステータス：\n      select#status(name='status')\n        option(value='backlog', selected='selected') 未着手\n        option(value='progress') 着手中\n        option(value='completed') 完了済\n    div\n      label(for='estimatedDate') 予定時刻：\n      input#estimatedDate(type='datetime-local', name='estimatedDate' value='')\n    div\n      input(type='submit')\n\n  br\n  a(href='/') 戻る\n    ")]),e._v(" "),o("amp-img",{attrs:{src:"/images/express/edit_routing/todo_form.png",alt:"Todo作成画面",title:"Todo作成画面",width:"640",height:"643",layout:"responsive"}})],1)}),[],!1,null,null,null);n.default=component.exports}}]);